// <auto-generated>
// 
//
// Generated by <a href="http://enunciate.codehaus.org">Enunciate</a>.
// </auto-generated>
using System;

namespace Gx.Types {

  /// <remarks>
  ///  Enumeration of high-level genealogical resource types.
  /// </remarks>
  /// <summary>
  ///  Enumeration of high-level genealogical resource types.
  /// </summary>
  public enum ResourceType {

    /// <summary>
    ///  Unspecified enum value.
    /// </summary>
    [System.Xml.Serialization.XmlEnumAttribute(Name="__NULL__")]
    [System.Xml.Serialization.SoapEnumAttribute(Name="__NULL__")]
    NULL,

    /// <summary>
    ///   A historical record.
    /// </summary>
    Record,

    /// <summary>
    ///   A collection.
    /// </summary>
    Collection,

    /// <summary>
    ///   A digital artifact, such as a digital image or video.
    /// </summary>
    DigitalArtifact,

    /// <summary>
    ///   A physical artifact.
    /// </summary>
    PhysicalArtifact,

    /// <summary>
    ///   A person.
    /// </summary>
    Person,

    /// <summary>
    ///  (no documentation provided)
    /// </summary>
    OTHER
  }

  /// <remarks>
  /// Utility class for converting to/from the QNames associated with ResourceType.
  /// </remarks>
  /// <summary>
  /// Utility class for converting to/from the QNames associated with ResourceType.
  /// </summary>
  public static class ResourceTypeQNameUtil {

    /// <summary>
    /// Get the known ResourceType for a given QName. If the QName isn't a known QName, ResourceType.OTHER will be returned.
    /// </summary>
    public static ResourceType ConvertFromKnownQName(string qname) {
      if (qname != null) {
        if ("http://gedcomx.org/Record".Equals(qname)) {
          return ResourceType.Record;
        }
        if ("http://gedcomx.org/Collection".Equals(qname)) {
          return ResourceType.Collection;
        }
        if ("http://gedcomx.org/DigitalArtifact".Equals(qname)) {
          return ResourceType.DigitalArtifact;
        }
        if ("http://gedcomx.org/PhysicalArtifact".Equals(qname)) {
          return ResourceType.PhysicalArtifact;
        }
        if ("http://gedcomx.org/Person".Equals(qname)) {
          return ResourceType.Person;
        }
      }
      return ResourceType.OTHER;
    }

    /// <summary>
    /// Convert the known ResourceType to a QName. If ResourceType.OTHER, an ArgumentException will be thrown.
    /// </summary>
    public static string ConvertToKnownQName(ResourceType known) {
      switch (known) {
        case ResourceType.Record:
          return "http://gedcomx.org/Record";
        case ResourceType.Collection:
          return "http://gedcomx.org/Collection";
        case ResourceType.DigitalArtifact:
          return "http://gedcomx.org/DigitalArtifact";
        case ResourceType.PhysicalArtifact:
          return "http://gedcomx.org/PhysicalArtifact";
        case ResourceType.Person:
          return "http://gedcomx.org/Person";
        default:
          throw new System.ArgumentException("No known QName for: " + known, "known");
      }
    }
  }
}
