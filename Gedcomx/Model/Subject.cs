// <auto-generated>
// 
//
// Generated by <a href="http://enunciate.codehaus.org">Enunciate</a>.
// </auto-generated>
using System;

namespace Gx.Conclusion {

  /// <remarks>
  ///  The &lt;tt&gt;Subject&lt;/tt&gt; data type defines the abstract concept of a genealogical &lt;em&gt;subject&lt;/em&gt;. A &lt;em&gt;subject&lt;/em&gt; is something with a unique and
  ///  intrinsic identity, e.g., a person, a location on the surface of the earth. We identify that &lt;em&gt;subject&lt;/em&gt; in time and space using various supporting
  ///  &lt;em&gt;conclusions&lt;/em&gt;, e.g. for a person: things like name, birth date, age, address, etc. We aggregate these supporting &lt;em&gt;conclusions&lt;/em&gt; to form an
  ///  apparently-unique identity by which we can distinguish our &lt;em&gt;subject&lt;/em&gt; from all other possible &lt;em&gt;subjects&lt;/em&gt;.
  /// </remarks>
  /// <summary>
  ///  The &lt;tt&gt;Subject&lt;/tt&gt; data type defines the abstract concept of a genealogical &lt;em&gt;subject&lt;/em&gt;. A &lt;em&gt;subject&lt;/em&gt; is something with a unique and
  ///  intrinsic identity, e.g., a person, a location on the surface of the earth. We identify that &lt;em&gt;subject&lt;/em&gt; in time and space using various supporting
  ///  &lt;em&gt;conclusions&lt;/em&gt;, e.g. for a person: things like name, birth date, age, address, etc. We aggregate these supporting &lt;em&gt;conclusions&lt;/em&gt; to form an
  ///  apparently-unique identity by which we can distinguish our &lt;em&gt;subject&lt;/em&gt; from all other possible &lt;em&gt;subjects&lt;/em&gt;.
  /// </summary>
  [System.SerializableAttribute()]
  [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://gedcomx.org/v1/",TypeName="Subject")]
  [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://gedcomx.org/v1/",TypeName="Subject")]
  public abstract partial class Subject : Gx.Conclusion.Conclusion {

    private bool? _extracted;
    private bool _extractedSpecified;
    private System.Collections.Generic.List<Gx.Common.EvidenceReference> _evidence;
    private System.Collections.Generic.List<Gx.Source.SourceReference> _media;
    private System.Collections.Generic.List<Gx.Conclusion.Identifier> _identifiers;
    /// <summary>
    ///  Whether this subject has been identified as &quot;extracted&quot;.
    /// </summary>
    [System.Xml.Serialization.XmlAttributeAttribute(AttributeName="extracted")]
    [System.Xml.Serialization.SoapAttributeAttribute(AttributeName="extracted")]
    public bool Extracted {
      get {
        return this._extracted.GetValueOrDefault();
      }
      set {
        this._extracted = value;
        this._extractedSpecified = true;
      }
    }

    /// <summary>
    ///  Property for the XML serializer indicating whether the "Extracted" property should be included in the output.
    /// </summary>
    [System.Xml.Serialization.XmlIgnoreAttribute]
    [System.Xml.Serialization.SoapIgnoreAttribute]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
    public bool ExtractedSpecified {
      get {
        return this._extractedSpecified;
      }
      set {
        this._extractedSpecified = value;
      }
    }

    /// <summary>
    ///  References to the evidence being referenced.
    /// </summary>
    [System.Xml.Serialization.XmlElementAttribute(ElementName="evidence",Namespace="http://gedcomx.org/v1/")]
    [System.Xml.Serialization.SoapElementAttribute(ElementName="evidence")]
    public System.Collections.Generic.List<Gx.Common.EvidenceReference> Evidence {
      get {
        return this._evidence;
      }
      set {
        this._evidence = value;
      }
    }
    /// <summary>
    ///  References to multimedia resources associated with this subject.
    /// </summary>
    [System.Xml.Serialization.XmlElementAttribute(ElementName="media",Namespace="http://gedcomx.org/v1/")]
    [System.Xml.Serialization.SoapElementAttribute(ElementName="media")]
    public System.Collections.Generic.List<Gx.Source.SourceReference> Media {
      get {
        return this._media;
      }
      set {
        this._media = value;
      }
    }
    /// <summary>
    ///  The list of identifiers for the subject.
    /// </summary>
    [System.Xml.Serialization.XmlElementAttribute(ElementName="identifier",Namespace="http://gedcomx.org/v1/")]
    [System.Xml.Serialization.SoapElementAttribute(ElementName="identifier")]
    public System.Collections.Generic.List<Gx.Conclusion.Identifier> Identifiers {
      get {
        return this._identifiers;
      }
      set {
        this._identifiers = value;
      }
    }
  }
}  
