///////////////////////////////////////////////////////////////////////////
// Description: Business Object Base class for the 'Translation_Master'
// Generated by FindMyFamilies Generator
///////////////////////////////////////////////////////////////////////////
using System;
using System.Reflection;
using System.Collections;
using System.EnterpriseServices;

using FindMyFamilies.Data;
using FindMyFamilies.Util;
using FindMyFamilies.Exceptions;
using FindMyFamilies.Transactions;
using FindMyFamilies.DataAccess;

// Please do not modify any code in this auto generated class.  This code will be overwritten when the generator is executed.
namespace FindMyFamilies.BusinessObject {

	/// <summary>
	/// Purpose: Business Object base class for TranslationMaster
	/// </summary>
	public class TranslationMasterBOBase : BusinessObjectBase {
		// Constant Declarations
		private static readonly object logCategory = MethodBase.GetCurrentMethod().DeclaringType;
		private static TranslationMasterDAO m_TranslationMasterDAO;

		// Property Declarations
		public static TranslationMasterDAO TranslationMasterDAO {
			get {
				if (m_TranslationMasterDAO == null) {
					TranslationMasterBOBase translationMasterBO = new TranslationMasterBOBase();
					lock(translationMasterBO) {
						m_TranslationMasterDAO = new TranslationMasterDAO();
					}
				}
				return m_TranslationMasterDAO;
			}
		}

		public virtual TranslationMasterDO CreateTranslationMaster(TranslationMasterDO translationMasterDO) {
			return TranslationMasterDAO.CreateTranslationMaster(translationMasterDO);
		}

		public virtual TranslationMasterDO ReadTranslationMaster(TranslationMasterDO translationMasterDO) {
			return TranslationMasterDAO.ReadTranslationMaster(translationMasterDO);
		}

		public virtual ICollection ReadTranslationMastersAll(DataTransferObject dataTransferObject) {
			return TranslationMasterDAO.ReadTranslationMastersAll(dataTransferObject);
		}

		public virtual ICollection ReadTranslationMastersAllList(DataTransferObject dataTransferObject) {
			return TranslationMasterDAO.ReadTranslationMastersAllList(dataTransferObject);
		}

		public virtual void UpdateTranslationMaster(TranslationMasterDO translationMasterDO) {
			TranslationMasterDAO.UpdateTranslationMaster(translationMasterDO);
		}

		public virtual void DeleteTranslationMaster(TranslationMasterDO translationMasterDO) {
			TranslationMasterDAO.DeleteTranslationMaster(translationMasterDO);
		}

		public virtual ICollection ReadTranslationMastersByPage(TranslationMasterDO translationMasterDO) {
			return TranslationMasterDAO.ReadTranslationMastersByPage(translationMasterDO);
		}

	}
}
